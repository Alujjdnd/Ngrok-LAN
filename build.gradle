plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java'
	id "com.modrinth.minotaur" version "2.+"
	//id 'net.minecraftforge.gradle.forge' version '2.0.2'
	//id 'com.matthewprenger.cursegradle' version '1.4.0'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/" }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//Java-Ngrok, a wrapper for the Ngrok service by providing a handy Java API to call it.
	modImplementation(include("com.github.alexdlaird:java-ngrok:2.2.9")) 

	modImplementation(include("org.yaml:snakeyaml:1.8"))

	modApi("me.shedaniel.cloth:cloth-config-fabric:4.11.14") {
        exclude(group: "net.fabricmc.fabric-api")
    }

	modImplementation(include("blue.endless:jankson:1.2.1"))

	modImplementation(include("com.terraformersmc:modmenu:3.1.0"))
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

shadowJar {
    manifest {
        attributes 'Main-Class': 'com.example.ApplicationKt'
    }
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

import com.modrinth.minotaur.dependencies.ModDependency
modrinth {
	token = System.getenv("MODRINTH_TOKEN") // This is the default. Remember to have the MODRINTH_TOKEN environment variable set or else this will fail, or set it to whatever you want - just make sure it stays private!
	projectId = "oTa1qz6R"
	versionNumber = project.mod_version // You don't need to set this manually. Will fail if Modrinth has this version already
	versionType = "release" // This is the default
	uploadFile = remapJar // With Fabric Loom or Architectury Loom, this MUST be set to `remapJar` instead of `jar`!
	gameVersions = [project.minecraft_version] // Must be an array, even with only one version
	loaders = ["fabric"] // Must also be an array - no need to specify this if you're using Fabric Loom or ForgeGradle
	dependencies = [
			new ModDependency("mOgUt4GM", "required")
	]
}

//curseforge {
//	apiKey = System.getenv("CURSEFORGE_TOKEN") // This should really be in a gradle.properties file
//	project {
//		id = '602252'
//		changelog = 'Added content and fixed bugs' // A file can also be set using: changelog = file('changelog.txt')
//		releaseType = 'release'
//	}
//}
